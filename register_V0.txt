import Avatar from '@mui/material/Avatar';
import Button from '@mui/material/Button';
import CssBaseline from '@mui/material/CssBaseline';
import TextField from '@mui/material/TextField';
import FormControlLabel from '@mui/material/FormControlLabel';
import Checkbox from '@mui/material/Checkbox';
import Link from '@mui/material/Link';
import Grid from '@mui/material/Grid';
import Box from '@mui/material/Box';
import LockOutlinedIcon from '@mui/icons-material/LockOutlined';
import Typography from '@mui/material/Typography';
import Container from '@mui/material/Container';
import { createTheme, ThemeProvider } from '@mui/material/styles';
import React, { useState,useEffect } from "react";


function Copyright(props) {
  return (
    <Typography variant="body2" color="text.secondary" align="center" {...props}>
      {'Copyright © '}
      <Link color="inherit" href="https://mui.com/">
        Your Website
      </Link>{' '}
      {new Date().getFullYear()}
      {'.'}
    </Typography>
  );
}
const theme = createTheme();

export default function SignUp() {
  useEffect(() => {
    if (localStorage.getItem("token")) {
      if (window.location.pathname === "/register") {
        window.location = "/";
      }
    }
  });

  let EEmail = '';
  let PPassword = '';
  let FFirstname = '';
  let LLastname = '';

  const handleSubmit = (event) => {
    event.preventDefault();
    const data = new FormData(event.currentTarget);
    const Password = data.get("password");
    const Confirm_password = data.get("confirmpassword");
    const jsondata = {
      email: data.get("email"),
      password: data.get("password"),
      fname: data.get('firstName'),
      lname: data.get('lastName'),
    };
    if(Password!==Confirm_password){
      alert("Password and confirm password should be same");
    }else if(Password.length < 8){
      alert("Password should be greater than 8 characters");
    }else{
      fetch("http://localhost:3333/register", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify(jsondata),
      })
      .then((response) => response.json())
      .then((data) => {
        if (data.status === "ok") {
          EEmail = jsondata.email
          PPassword = jsondata.password
          FFirstname = jsondata.fname
          LLastname = jsondata.lname
          alert("Send OTP success");
        } else {
          alert("Send OTP Failed");
        }
      })
      .catch((error) => {
        console.error("Error:", error);
      });
    }
  };

  const handleSubmitotp = (event) => {
    event.preventDefault();
    const data = new FormData(event.currentTarget);
    const jsondata = {
      otp: data.get("otp"),
      // email: data.get("email"),
      // password: data.get("password"),
      // fname: data.get('firstName'),
      // lname: data.get('lastName'),
      EEmail,
      PPassword,
      FFirstname,
      LLastname,
    };
    fetch("http://localhost:3333/verify", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify(jsondata),
    })
      .then((response) => response.json())
      .then((data) => {
        if (data.status === "ok") {
          localStorage.setItem("token", data.token); //ส่ง token ไว้ที่ตัวแปร token แล้วส่งไปหน้า /
          console.log(data.token);
          window.location = "/";
        } else {
          alert("Register Failed");
        }
      })
      .catch((error) => {
        console.error("Error:", error);
      });
  };
 
  return (
    <ThemeProvider theme={theme}>
      <Container component="main" maxWidth="xs">
        <CssBaseline />
        <Box
          sx={{
            marginTop: 8,
            display: 'flex',
            flexDirection: 'column',
            alignItems: 'center',
          }}
        >
          <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>
            <LockOutlinedIcon />
          </Avatar>
          <Typography component="h1" variant="h5">
            Sign up
          </Typography>

          <Box component="form" noValidate onSubmit={handleSubmit} sx={{ mt: 3 }}>
            <Grid container spacing={2}>
              <Grid item xs={12}>
                <TextField
                  autoComplete="given-name"
                  name="username"
                  required
                  fullWidth
                  id="username"
                  label="Username"
                  autoFocus
                />
              </Grid>

              <Grid item xs={12}>
                <TextField
                  required
                  fullWidth
                  id="email"
                  label="Email"
                  name="email"
                  autoComplete="email"
                />
              </Grid>
              <Grid item xs={12}>
                <TextField
                  required
                  fullWidth
                  name="password"
                  label="Password"
                  type="password"
                  id="password"
                  autoComplete="new-password"
                />
              </Grid>
              <Grid item xs={12}>
                <TextField
                  required
                  fullWidth
                  name="confirmpassword"
                  label="Confirm-Password"
                  type="password"
                  id="confirmpassword"
                  autoComplete="condirm-password"
                />
              </Grid>

   

              {/* <Grid item xs={12}>
                <FormControlLabel
                  control={<Checkbox value="allowExtraEmails" color="primary" />}
                  label="I want to receive inspiration, marketing promotions and updates via email."
                />
              </Grid> */}

            </Grid>

            <Button
              type="submit"
              fullWidth
              variant="contained"
              sx={{ mt: 3, mb: 2 }}
            >
              Sign Up
            </Button>

            <Grid container justifyContent="flex-end">
              <Grid item>
                <Link href="/login" variant="body2">
                  Already have an account? Sign in
                </Link>
              </Grid>
            </Grid>
          </Box>
          
          <Box
            component="form"
            onSubmit={handleSubmitotp}
            noValidate
            sx={{ mt: 1 }}
          >
          <Typography component="h1" variant="h5">
            ยืนยันรหัส
          </Typography>
          
          <TextField
            margin="normal"
            required
            fullWidth
            id="otp"
            label="OTP"
            name="otp"
            autoComplete="otp"
            autoFocus
          />
          <Button
            type="submit"
            fullWidth
            variant="contained"
            sx={{ mt: 3, mb: 2 }}
          >
            ยืนยันรหัส
          </Button>
        </Box>
        </Box>
        <Copyright sx={{ mt: 5 }} />
      </Container>
    </ThemeProvider>
  );
}